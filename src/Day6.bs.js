// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var $$Array = require("bs-platform/lib/js/array.js");
var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Printf = require("bs-platform/lib/js/printf.js");
var $$String = require("bs-platform/lib/js/string.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var Belt_MapString = require("bs-platform/lib/js/belt_MapString.js");
var Caml_exceptions = require("bs-platform/lib/js/caml_exceptions.js");

var input = $$Array.map($$String.trim, "J1C)J1M\nN2W)2DM\nDST)VZL\n555)45Q\nS4C)DGK\nH51)JLX\nK4L)3F5\nL58)T9K\nGBC)NZT\nL7B)CQB\nL7L)R63\n4LQ)KHZ\nXWW)L61\nR6W)DVN\n91C)GPM\nYWZ)51W\nXK8)22K\nNV2)DTP\n5LQ)F4V\n4H9)R4B\n29X)R9H\n1G5)W91\nTZL)S4C\n1Z7)1MY\nN7V)1Z4\n7YX)LQ9\nPK9)D1Y\nQVK)K1H\n4FT)3X5\n5M5)29X\n5XH)H5K\nLGK)V51\nHMN)LNG\n5QX)KHJ\n797)TJR\nSRV)4RT\n1R4)MSZ\n3SJ)XRT\nX6N)J1N\nWM8)LH2\nKGZ)5ZP\nZY5)9GY\nH5K)2LX\n4QD)1ND\nJDK)WRX\nKSR)4LD\n8Q3)W8B\n51W)QZT\nHSQ)CV5\n35F)VW2\n8Q9)845\n8FS)XB4\nWFX)N2F\nBDG)G3G\nQ7S)K1X\n1MY)PCB\nFRW)TZL\nN78)Z9K\nJ4F)98D\n4J2)6S3\n9QY)1HG\nRRX)SW4\nDH7)CLW\nM8W)4QD\n9K9)1NV\nKHW)T14\nDQC)ZCG\nR4H)MPG\nFY9)HXB\n7SF)J1C\nSPT)P66\nBB6)XZR\n7MR)MDH\nM4G)DBH\n7RP)BHH\n2H8)QKS\nRL2)8ZM\n598)68Q\nMPG)WWF\nBWN)J2D\nFRF)JJM\nQFJ)57P\nNSS)BVH\n3SM)HTP\nN1K)SYL\n33P)TY2\nWWF)7SK\n4V3)6PT\n4LD)13S\n9HN)CTC\nQ87)48X\n7MB)96M\n6S3)B65\nKFJ)5YL\nDGK)TS5\n2C3)YL7\nM79)GRM\nBRG)41X\nGPJ)YLW\n8FS)2LC\nSL5)G5L\n2MW)RHN\nDDZ)J4F\nZQZ)4LQ\nFZF)Z6X\nXF1)JWS\nB7C)6DM\nGN9)N7V\nF5K)2JX\n7QR)FCC\n3DG)2X7\nL9C)RMW\nXKM)26Q\nFPK)5VT\nRGQ)XF1\n174)79T\n1CP)KVB\nX5Y)WWH\nM1K)2X2\nL53)76G\n5MS)YX8\n8P2)DPP\nLMJ)B6X\nNKD)24R\nLH2)X86\nD4N)CCC\n1R2)N5J\nLGF)YCQ\nYL7)Y93\nNCG)7NJ\nRR2)MNR\n24R)FPK\nH62)RC8\nHRX)H53\nZKS)N86\nB95)RS5\nZ8Y)QY7\nJ21)YL8\nT32)FL9\n92L)PLW\n41X)YLV\n8NY)DQC\n3FS)VVC\n2F2)W4C\nPH4)WGK\nTS5)4WQ\nYMS)RHC\nFW6)PQG\nL3F)RV3\n6XN)KSR\nBZ3)88B\nQJ6)LTG\nBQJ)7J3\nB5P)L22\nMWG)QQ8\nR4B)MGY\nG5L)46V\nXNW)3JL\nQY7)HZV\n2HK)J38\nY8W)WQV\nGBT)L7L\nSZP)87F\nFN6)RP1\n43G)4H9\nTTZ)ZP2\nNV2)F3M\nY3J)9K9\n87F)8HN\nRXZ)PH4\n5YL)QQQ\nS5Q)388\nRJR)5MS\nDBV)7FQ\nD7F)QQ9\nVG5)N78\nJSD)6YZ\nC7B)TRM\nKVB)P7C\nHL7)WL3\nHNW)75P\nZ9K)H51\nZ4V)43G\nG2D)Q6D\nC94)DBV\n6MK)FYV\nZ4X)P5K\nT9M)D7F\nD4B)PNW\nLB3)JDK\nF3M)LPV\nNJN)Y18\nFV7)HSQ\nXRT)YQG\n4ML)RJR\n6YZ)2N3\nJCG)HSX\n6MN)5LQ\nTX5)JXH\n596)NRC\n2LC)KMP\n3ML)THS\nBHH)ZQZ\nWLK)62P\nWSB)BBL\nZBT)J1T\nR1F)DS2\nKBK)BY4\nBWN)ZW6\nHPP)3SZ\nSTM)BRG\nWFX)XGR\n2X2)2HK\nV51)V9K\n8LF)Q6N\n2RB)M6G\nHMW)NKD\nR7R)9VS\nL2Z)JFZ\nW8B)Z99\nPCG)4SK\n4YG)JHN\nWC8)N5C\n798)J6P\n4XX)MZT\n7K7)XJY\n8QZ)111\nQZT)551\nHQC)7VS\nD5Y)JGF\nX3X)ZHM\n8SD)TVZ\nY67)N44\n1S1)P2G\n1W4)4BH\nRH1)8NV\n9D6)4W1\nNJN)L2Z\nJXH)1CP\n4L7)3C7\n3SZ)YL5\nTF4)53L\n96V)KKD\n8TS)NCJ\nC8W)JHB\nGWZ)WDM\n1PL)CLT\nQJX)VDD\nR63)BJT\n1Z4)HHF\nVNM)STM\nY7C)3BP\nNQM)9V2\nWTK)NKM\nPQZ)584\n26Q)BZ3\nL6Q)J23\nW7Z)RXZ\nZHM)PBW\nHFS)9CB\nVVY)822\n64W)27N\nSPS)5ZD\nJJM)TW4\nM5K)7FM\n5ZY)X3Q\n5VT)SYG\nQP4)Z4S\n9V2)FRW\nDTP)VVY\n3YF)4NN\n9GY)5MV\nWH4)1R2\n2CC)1WL\n39N)MR4\nX21)6MN\nLTG)64W\nRDK)FCQ\nNQ6)7J6\nK7Y)8S7\nM79)PFH\nC21)WTK\n3X5)HWM\n987)BTG\nHYH)Y8L\nXRT)LPK\nJYS)HFS\nS4G)6D7\nN37)356\nD9F)MWG\nP43)F8L\nRHC)P3S\nMWG)NSZ\nST7)HYY\nZ4S)RRX\nD39)XJR\nY3L)4XX\n5X2)79C\nWL1)7Q5\nKYS)RW4\nQ87)74P\nYDN)HNN\n3XH)4LW\n596)VWL\nRW4)RCF\nWCG)CNL\nS9D)GHQ\nG31)DST\n9VY)WC8\n4WQ)MLF\n388)Y9Y\n845)R7H\nPWR)M2T\nL61)4GP\nLML)L3F\nH1H)GZQ\nC21)DLS\nXB4)L53\nN5J)NQM\nTHS)CSB\nXGR)QCB\nSPT)4FT\n7FQ)WMP\n13S)8QZ\nBVH)WMC\nGSN)7CQ\nZDY)ZBD\nT2Q)5J3\nJ6P)R6W\nN5C)4H7\nKKD)YKQ\nKBJ)P9J\n14B)K27\nN9F)HYS\n2LG)G2D\n3C7)S2G\nHB9)XT1\nQQX)K1K\n47H)14B\n48Q)FQW\nSTP)PWR\nNWW)ZY5\n63F)FRL\n4W1)8G8\n7W6)CVN\nRPS)4NP\n9HN)1MR\nM96)454\n8ZM)RVB\nXVT)7YX\nM6G)WVP\nZPR)BNN\nQ83)6SS\nFM2)YMS\nP7R)59B\nWTB)7RP\nYT1)D27\nPW6)QBQ\nJ2D)L9L\n8G8)8Q3\nL12)GBC\nFQW)2RB\nZ8T)D1X\nHYS)QQX\n63F)72B\n34Z)DSG\n2GK)3XH\nF5K)LD1\nDQ3)QVK\nSL5)88N\nXWP)7SF\nNSZ)47H\n1Z2)NT6\nFYV)M7W\nKHJ)91C\nRKZ)FS3\nP7C)GW6\nBYN)33X\nQZN)HRX\n7J5)L6X\n2X8)QH4\nKHZ)BB6\nNCJ)9FL\nJHN)Y67\nFC5)BYN\nGRM)CYQ\nNST)3SJ\nVZL)3LQ\n1VH)XKM\nLQZ)YD8\nCD5)LGK\n32Y)3V7\nCTH)56S\nK27)VNM\n4NP)C7B\nVDK)DR4\nZGY)848\nZNL)M96\nWVP)91F\nRHC)2D1\n53L)YXF\nCCC)L9C\n81J)K36\nCCM)2HF\n6LG)CWR\n98D)S2R\nN2F)1W4\nDMP)DMT\nBGS)2MP\nBHD)D5Y\n7VS)6LG\nWSN)6SD\nHYP)1CV\nK58)FLX\n2X7)Y8X\nQ6D)Z4V\nRCF)MTW\nJ5B)F5K\n5V1)CP9\nCSQ)ZC8\nJ9F)WQW\n8NV)BSQ\n8HV)S7S\nZP2)3MZ\n1CY)WCG\nRMW)HCL\n46V)J5B\n9QF)JYP\nLPV)LQZ\nK6M)ZTH\nMZQ)VDM\nN16)CD5\nY5W)GX3\nXQC)QJ6\n7CQ)CSF\n79C)X23\nW7G)798\nJ23)LSZ\n5J3)K4L\n67H)WM3\nGJF)LMX\nTJR)YLG\n3LQ)29L\nBY4)63F\nYL5)MPJ\nBZV)951\nRJ1)VG5\nRTY)KS9\n51W)BDG\nP66)H62\nY89)JT5\nKM7)VPJ\nCSF)9HN\nX89)G9X\nG9X)J9F\nCTC)32Y\nFLX)FWV\n6PN)HMN\nV8Y)ST7\nZZ3)2FT\nJ1T)JMT\nFH7)PW6\nY93)CMF\nDK2)LB3\nSWN)WSB\nZ6R)QS4\n7LB)29W\n5ZX)96V\nD1X)KFJ\nX23)9F5\n2FT)PR3\nYX8)HL7\nNFY)ZZ3\n756)Y6V\nD2C)LP3\n1MH)1HR\nTFS)NFY\nCMF)271\n1PS)QVR\nJ1M)FW6\n9QF)GYC\nD27)SWN\nWMC)2CC\nJ38)RPY\n1HG)1MF\n5LQ)B43\nN4P)ZPS\nPR3)FNP\n4H7)T9M\n3BR)SC6\nK1X)GPR\n9TP)948\nYQG)BRK\nJYP)S4G\nD1Y)4J2\nY89)RG2\nDVQ)XY9\nDMT)2MJ\nK27)TY1\n88B)YDT\n43N)HB9\nMGY)1MH\nYFR)CTH\n74N)JYS\nX86)JCG\n948)GY2\n7MR)5RL\nPZL)GR4\n32Y)QZN\nK1T)987\n5ZD)644\n7X3)9R8\nWGK)XQC\nDLS)2X8\nRHN)T2Q\nGR4)1SJ\n6DM)L7B\n4NP)JBQ\nKS9)YJX\nYLG)X21\nG1S)1R4\n5ZP)8HV\nD1Y)K7Y\n8MW)WY3\nQJX)X75\nGY2)3DG\nCV5)GBG\nK36)X1M\nBTG)N1K\nRV3)PKZ\nV9K)W11\n22K)G1S\nCMH)M8W\nM1J)LMJ\nCMN)XVT\nBSQ)PMB\nJ6P)MH2\nLL3)H7T\nKR1)KWQ\nM7W)NLS\nRS5)P6B\n1ND)Q26\nJBQ)NV2\nRPL)JCW\n56S)NPJ\n6YZ)XWP\n52S)X5Y\nZ99)1DF\nL22)28X\nGKJ)S9D\n4GP)9QY\nNSZ)HYP\n45Q)3BR\nRSD)61Y\n356)Y89\nP5K)797\nC84)NST\nCJG)LZC\n1MR)DNQ\nLDQ)YZ4\n61Y)174\n822)R1F\n6PT)VB1\n8YY)QDQ\nVYG)X6C\nHHF)T68\n46F)M9V\n1MR)B7C\n2MP)LL3\nCTK)YWZ\nT98)WL1\n14J)BHD\nJ9N)GWM\nMZT)K28\nRPL)FH7\nT58)35F\nDPP)4L7\nRVB)DQ3\nQBZ)BSY\nTSB)PCG\nRG2)L6N\n8G8)S6P\nDQ3)X6N\n88N)ML3\n6NF)3M4\nJFG)F85\nX3Q)8FS\n96M)3YF\nD4B)SAN\nLD1)P6P\n9B8)416\nBJT)C74\nQVR)XLT\nB43)RPM\nQS4)6RG\nYD8)96R\n8HN)1G5\nRJ1)9B8\nBRK)ZBT\nBHH)RKZ\nTGZ)2QQ\nNWM)1N6\nWWH)46F\nLP3)SPS\n28X)LNX\nX2X)CMH\nCP9)T43\n9F5)9QW\n2MP)7MR\n26D)67H\n951)RGQ\nP6P)KYS\nH3H)T6Y\nPY6)N37\nM9V)Y3L\nV56)M29\nXWM)DMP\nB65)3VX\nBBL)W7G\n96W)KHW\nJGF)VNS\n6KR)NWG\n7P8)TQ6\n394)M79\n7QK)YZZ\nBZ6)1Z2\nD41)14J\n848)LDQ\nHYY)JP5\nS7S)8YF\n7HW)KD6\nTW4)BMN\nVPJ)X89\nQCB)R4H\nQHX)Z6R\nWRX)YT1\n3BP)SPT\n1HR)1Z7\n9LR)26D\nS5Q)2C3\n9W5)HYH\n72B)BZV\nLMX)MLN\nJFZ)TCD\n271)82P\n8YF)RCS\n9W5)C94\nXJY)2GK\nKMP)NWM\nLZC)2MG\nLPK)7MB\nS2G)14Y\nBMN)5MR\nYL8)TQQ\nTW4)8LF\nHWM)P7R\nQQQ)KLG\nVFV)BWN\nLKN)RH1\nV51)RKK\nR7H)8S2\nLLY)X2X\n3W9)FRF\nKTP)Y7C\nDSG)5QT\n7J3)NPB\n1R2)HL2\nCSB)HPP\nX7H)NWW\nBSY)F4S\nRS5)GSN\nF85)N62\nHYP)X7H\nZTH)KR1\n69D)PTP\nCLT)9JZ\nLT1)GRR\nYXF)LT1\nFNP)QFJ\nHL2)6R1\nML3)KNR\nLQ9)ZSD\n84B)5ZX\nQ5S)Z8T\n6FJ)P43\nRP1)19V\nGW6)FZF\n2DK)WCR\nJ9X)Q83\nWQW)6TK\nTS5)8P2\nV5R)5H5\nD9Z)7QK\nB6X)T32\n29W)VDB\nMLF)WSN\nCOM)5M5\nHZV)XWM\nM2T)9TP\nF4V)ZXJ\nPNQ)NQ6\nYLW)DVQ\n9VS)CTK\n6TK)3ML\nSHK)8TS\nRC8)596\nNRC)JFG\n9CB)84B\nS2R)263\nW11)8CJ\n7Q5)7J5\nS12)KBK\nDBH)HLK\nDS2)DXC\n9QW)SHK\nBPQ)M4G\nSC6)VV6\nNT6)X8W\n584)G31\nD7S)5X2\nT6Y)CCM\nJMT)LML\n91F)1CY\nCVN)J9X\nTY2)VFV\nRKK)RTQ\nQZS)Z7G\nMH2)XWW\nZVQ)DH7\nVB1)HP5\nH7T)3W9\nXN6)51K\n1N6)1S1\nZSD)HQC\nCYQ)SZP\nNZT)LGF\nGBG)HNG\nL6X)WH4\n2LJ)FN6\nJT5)XNS\nQ17)C5C\n3JL)D39\nVDD)R7R\n55P)XNW\nS8K)7LB\nN86)8YY\nRPM)X3X\nHCL)XH1\nH53)J9N\nY4R)MZQ\n7ZX)D9Z\nHTP)Y3J\nMTW)BWW\nT1M)Q87\nB8K)C8W\nR9H)NCG\n48X)T58\nBZV)N2W\nSYL)YFR\nYCQ)FM2\nZXJ)2H8\n644)2MW\n1CV)BZ6\n6YD)81J\nLPK)KTP\nQQ8)N4P\nVDM)H1H\n7FM)JJJ\nVZN)V56\nRPY)62F\n6SD)K1T\n2Y9)BQJ\n76G)598\nCNL)H3H\nS7K)69D\nYYJ)D4B\nWMP)GPJ\nXH1)KM7\nTJS)S77\n6VN)PY6\nN44)5PS\nG3G)GJF\n9FV)M1J\nZCG)J9T\nCSF)BBR\nWCR)L6Q\n2HF)Q7S\n9FL)BGS\nP3S)PQZ\n79T)NJN\nZJY)9FV\nP9J)2PH\nX8W)96W\nGZQ)XH6\nWCG)B81\nHNN)912\nKLG)KBJ\nNLS)19J\nJCW)Y8W\n62F)LLY\nQH4)V5R\n7NJ)WS7\nTY1)DTS\nMNR)39N\n72B)RL2\nDPP)TF4\nKWQ)1VH\nNPJ)74N\nZ7G)RT6\n5MR)CJG\n82P)TJS\nM29)YDN\n9LR)C21\n26D)NSS\nRT6)Z8Y\n19J)ZJY\nJ71)WFX\nQDQ)QZS\nYZZ)756\n9JZ)KPD\n3V7)QW6\nT9K)QJX\n8S2)5V1\nY18)6VN\nS6P)TQS\nX75)K8H\n8CJ)Q3J\nZPS)LYC\n454)RTY\nPBW)STP\nQ26)VDK\n45Q)D9F\nTVZ)9QF\nN1K)T2S\nL6N)Y5W\nRTQ)RPS\nSSY)LFY\nTQS)WM8\nY6V)ZKS\nQ83)VXD\nVDB)SSR\nF4S)CMN\nNSV)GWZ\nMDH)D41\nMCT)XK8\n32Q)C84\nQQ9)PK9\nQW6)T1M\nLGK)HMW\nB81)V8Y\n5RL)4CF\n3SJ)KGZ\n6RG)VMN\n416)ZPR\nT1M)VZN\nPTP)ZDY\nC8P)N16\n3F5)T98\nBNN)DDZ\n6D7)D2C\nYDT)Q5S\nN62)JWH\nYSY)QBZ\nVDK)W5N\n1DF)5ZY\n9K5)J21\nX6C)1PS\nMSZ)G4Z\n3VX)Z4X\nP2G)K58\nL58)RSD\n51K)W88\nCQB)RDK\nTCD)D4N\nPLW)L12\n78J)LKN\n9FL)QHX\nWY3)5XH\n68Q)J71\n4RT)K6M\n2MG)ZH1\n19V)32Q\nYJX)9VY\nGHQ)6MK\nKNR)VMM\nGRR)NSV\nJJJ)8NY\n2DM)2DK\n4NN)7P8\nPMB)JSD\nXT1)RR2\nGPR)VS4\nCN8)N9F\nDNQ)6XN\n8Q9)TX5\nMR4)YSY\nDR4)8Q9\nPNW)CSQ\nVSV)ZNL\nFCC)SSY\nGX3)2LG\nJ6G)V9M\n2QH)7W6\n33X)FY9\nQKS)78J\nN37)2L1\nLYC)SRV\nCLW)43N\n91F)92L\nXJR)TFS\nXLT)TSB\nYKQ)J6G\n5H5)15Z\nHSX)7HW\nZC8)6YD\n7J6)S8K\n2RN)HNW\nCN8)YYJ\nKPD)7ZX\nVXD)VYG\nZW6)7K7\n5QT)XN6\n2D1)B95\nP6B)7QR\nMPJ)48Q\nCMH)8MW\n57P)B5P\nGYC)5QX\n2L1)M5K\nK8H)4V3\nGRR)9LR\nHL7)ZVQ\nWS7)MCT\n57P)FV7\nRJR)PL4\n5MV)CPJ\n5PS)55P\nHLK)4ML\nLNX)ML6\n2MJ)BPQ\n2N3)WLK\nWM3)GN9\nWDM)3SM\nYZ4)B8K\nLFY)VVJ\n15Z)9K5\nCWR)TGZ\nXBY)6NF\nMLN)MPK\nNRC)33P\nVVJ)PZL\nK1K)6FJ\nQ6N)XBY\n4CF)RJ1\n3M4)NWC\nJP5)DT8\n62P)1PL\nK28)S12\nPQG)S5Q\nX1M)Q17\nRCS)6PN\nWL3)FC5\nL6X)S7K\nNWC)2LJ\n29L)CN8\n4BH)9W5\nNWG)555\nVWL)RPL\nFRL)VSV\nYLV)394\nFL9)2QH\n8S7)M1K\nVW2)TTZ\nPL4)2Y9\nVV6)SL5\n14Y)D7S\n74P)G6Y\nSSR)YOU\nY8L)2RN\nW4C)W7Z\nML6)PNQ\nK1H)QP4\n75P)ZGY\nW5N)WTB\nWQV)Y4R\n2QQ)9D6\n59B)C8P\nCPJ)3FS\nPFH)KHN\n6SS)2F2\nC74)4YG\nSYG)DK2\nZBD)7X3\nW91)13L\nX6C)52S\nT43)8SD\n2PH)GBT\nG4Z)GKJ\n598)L58\n6R1)34Z\nDVN)6KR\nVMM)687".split("\n"));

var com = /* Node */[
  "COM",
  /* [] */0
];

var init = /* record */[/* nodeMap */Belt_MapString.set(Belt_MapString.empty, "COM", com)];

function addOrbit(map, parentKey, nodeKey) {
  var match = Belt_MapString.get(map[/* nodeMap */0], parentKey);
  if (match !== undefined) {
    var match$1 = match;
    var child = /* Node */[
      parentKey,
      /* [] */0
    ];
    var children_001 = match$1[1];
    var children = /* :: */[
      child,
      children_001
    ];
    var parent_000 = match$1[0];
    var parent = /* Node */[
      parent_000,
      children
    ];
    var nodeMap = Belt_MapString.update(Belt_MapString.set(map[/* nodeMap */0], parentKey, parent), nodeKey, (function (v) {
            if (v !== undefined) {
              return /* Node */[
                      parentKey,
                      v[1]
                    ];
            } else {
              return child;
            }
          }));
    return /* record */[/* nodeMap */nodeMap];
  } else {
    var child$1 = /* Node */[
      parentKey,
      /* [] */0
    ];
    var children$1 = /* :: */[
      child$1,
      /* [] */0
    ];
    var parent$1 = /* Node */[
      parentKey,
      children$1
    ];
    var nodeMap$1 = Belt_MapString.update(Belt_MapString.set(map[/* nodeMap */0], parentKey, parent$1), nodeKey, (function (v) {
            if (v !== undefined) {
              return /* Node */[
                      parentKey,
                      /* :: */[
                        child$1,
                        v[1]
                      ]
                    ];
            } else {
              return child$1;
            }
          }));
    return /* record */[/* nodeMap */nodeMap$1];
  }
}

function parseConnection(map, connection) {
  var match = $$Array.map($$String.trim, connection.split(")"));
  if (match.length !== 2) {
    return map;
  } else {
    var parent = match[0];
    var child = match[1];
    return addOrbit(map, parent, child);
  }
}

var orbitMap = $$Array.fold_left(parseConnection, init, input);

var OrbitNotFoundException = Caml_exceptions.create("Day6-AdventOfCode2019.OrbitNotFoundException");

function getOrbits(_$staropt$star, map, _param) {
  while(true) {
    var param = _param;
    var $staropt$star = _$staropt$star;
    var parent = param[0];
    var count = $staropt$star !== undefined ? $staropt$star : 0;
    if (parent === "COM") {
      return count + 1 | 0;
    } else {
      var match = Belt_MapString.get(map[/* nodeMap */0], parent);
      if (match !== undefined) {
        _param = match;
        _$staropt$star = count + 1 | 0;
        continue ;
      } else {
        throw [
              OrbitNotFoundException,
              parent
            ];
      }
    }
  };
}

var part1 = List.fold_left((function (sum, param) {
        return sum + getOrbits(undefined, orbitMap, param[1]) | 0;
      }), 0, List.filter((function (param) {
              return param[0] !== "COM";
            }))(Belt_MapString.toList(orbitMap[/* nodeMap */0])));

console.log(Curry._1(Printf.sprintf(/* Format */[
              /* String_literal */Block.__(11, [
                  "Part 1: ",
                  /* Int */Block.__(4, [
                      /* Int_d */0,
                      /* No_padding */0,
                      /* No_precision */0,
                      /* End_of_format */0
                    ])
                ]),
              "Part 1: %d"
            ]), part1));

function getOrbitsList(_$staropt$star, map, _param) {
  while(true) {
    var param = _param;
    var $staropt$star = _$staropt$star;
    var parent = param[0];
    var orbits = $staropt$star !== undefined ? $staropt$star : /* [] */0;
    if (parent === "COM") {
      return orbits;
    } else {
      var match = Belt_MapString.get(map[/* nodeMap */0], parent);
      if (match !== undefined) {
        var node = match;
        _param = node;
        _$staropt$star = /* :: */[
          node[0],
          orbits
        ];
        continue ;
      } else {
        throw [
              OrbitNotFoundException,
              parent
            ];
      }
    }
  };
}

function findCommonParent(_$staropt$star, _$staropt$star$1, _list1, _list2) {
  while(true) {
    var list2 = _list2;
    var list1 = _list1;
    var $staropt$star = _$staropt$star$1;
    var $staropt$star$1 = _$staropt$star;
    var parent = $staropt$star$1 !== undefined ? Caml_option.valFromOption($staropt$star$1) : undefined;
    var count = $staropt$star !== undefined ? $staropt$star : 0;
    var exit = 0;
    if (list1 && list2) {
      var p2 = list2[0];
      var p1 = list1[0];
      if (p1 === p2) {
        _list2 = list2[1];
        _list1 = list1[1];
        _$staropt$star$1 = count + 1 | 0;
        _$staropt$star = Caml_option.some(/* tuple */[
              p1,
              p2
            ]);
        continue ;
      } else {
        exit = 1;
      }
    } else {
      exit = 1;
    }
    if (exit === 1) {
      return /* tuple */[
              parent,
              count - 1 | 0
            ];
    }
    
  };
}

var you = Belt_MapString.getExn(orbitMap[/* nodeMap */0], "YOU");

var san = Belt_MapString.getExn(orbitMap[/* nodeMap */0], "SAN");

var orbitsYou = getOrbitsList(undefined, orbitMap, you);

var orbitsSan = getOrbitsList(undefined, orbitMap, san);

var match = findCommonParent(undefined, undefined, orbitsYou, orbitsSan);

var nodeCount = match[1];

var part2 = (List.length(orbitsYou) - nodeCount | 0) + (List.length(orbitsSan) - nodeCount | 0) | 0;

console.log("Part 2: ", part2);

var parent = match[0];

exports.input = input;
exports.com = com;
exports.init = init;
exports.addOrbit = addOrbit;
exports.parseConnection = parseConnection;
exports.orbitMap = orbitMap;
exports.OrbitNotFoundException = OrbitNotFoundException;
exports.getOrbits = getOrbits;
exports.part1 = part1;
exports.getOrbitsList = getOrbitsList;
exports.findCommonParent = findCommonParent;
exports.you = you;
exports.san = san;
exports.orbitsYou = orbitsYou;
exports.orbitsSan = orbitsSan;
exports.parent = parent;
exports.nodeCount = nodeCount;
exports.part2 = part2;
/* input Not a pure module */
